apply plugin: "java"
apply plugin: "maven"
apply plugin: "maven-publish"

group="${buildPackage}" 
version="${buildVersion}"

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

javadoc.options.addStringOption("Xdoclint:none", "-quiet")

repositories{
    mavenLocal()
	mavenCentral()
	maven{
		url System.getenv("REPOSITORY_URL")
		credentials{
			username = System.getenv("REPOSITORY_USER")
			password = System.getenv("REPOSITORY_PASSWORD")
		}
	}
}

sourceSets{
    main{
        java{
            srcDirs "src/main/java"
        }
	    resources{
    	    srcDirs "src/main/resources"
    	}
    }
    test{
        java{
            srcDirs "src/tests/java"
        }
	    resources{
    	    srcDirs "src/tests/resources"
    	}
    }
}

dependencies{
	compile "org.apache.activemq:activemq-broker:5.17.0"
	compile "org.apache.activemq:activemq-client:5.17.0"
	compile "net.sourceforge.barbecue:barbecue:1.5-beta1"
	compile 'net.bytebuddy:byte-buddy:1.12.10'
	compile "org.apache.commons:commons-dbcp2:2.9.0"
	compile "commons-fileupload:commons-fileupload:1.4"
	compile "org.apache.commons:commons-jexl3:3.2.1"
	compile "commons-net:commons-net:3.8.0"
	compile "org.apache.commons:commons-text:1.9"
	compile "org.dom4j:dom4j:2.1.3"
	compile "com.sun.mail:dsn:2.0.1"
	compile "net.sf.ehcache:ehcache:2.10.9.2"
	compile "com.sun.mail:gimap:2.0.1"
	compile "org.hibernate.common:hibernate-commons-annotations:5.1.2.Final"
	compile "org.hibernate:hibernate-core:5.6.8.Final"
	compile "org.hibernate:hibernate-ehcache:5.6.8.Final"
	compile "org.hibernate:hibernate-jcache:5.6.8.Final"
	compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final"
	compile "com.google.guava:guava:31.1-jre"
	compile 'org.glassfish.hk2:hk2-api:3.0.3'
	compile 'org.glassfish.hk2:hk2-core:3.0.3'
	compile 'org.glassfish.hk2:hk2-locator:3.0.3'
	compile 'org.glassfish.hk2:hk2-utils:3.0.3'
	compile "org.apache.httpcomponents:httpcore:4.4.15"
	compile "org.apache.httpcomponents:httpcore-nio:4.4.15"
	compile "org.apache.httpcomponents:httpclient:4.5.13"
	compile "org.apache.httpcomponents:httpmime:4.5.13"
	compile "com.sun.mail:imap:2.0.1"
	compile "com.lowagie:itext:4.2.2"
	compile 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
	compile 'com.fasterxml.jackson.core:jackson-core:2.13.3'
	compile 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.13.3'
	compile 'net.sf.jasperreports:jasperreports:6.19.1'
	compile 'com.google.zxing:javase:3.5.0'
	compile "net.sf.jmimemagic:jmimemagic:0.1.5"
	compile "javax.servlet:jstl:1.2"
	compile "com.sun.mail:mailapi:2.0.1"
	compile 'mysql:mysql-connector-java:8.0.29'
	compile "com.squareup.okhttp3:okhttp:4.9.3"
	compile "com.squareup.okio:okio:3.1.0"
	compile "org.apache.poi:poi:5.2.2"
	compile "org.apache.poi:poi-ooxml:5.2.2"
	compile "com.sun.mail:pop3:2.0.1"
	compile "com.wcohen:com.wcohen.secondstring:0.1"
	compile 'org.seleniumhq.selenium:selenium-api:4.1.4'
	compile 'org.seleniumhq.selenium:selenium-chrome-driver:4.1.4'
	compile 'org.seleniumhq.selenium:selenium-java:4.1.4'
	compile "org.seleniumhq.selenium:selenium-leg-rc:4.1.2"
	compile 'org.seleniumhq.selenium:selenium-remote-driver:4.1.4'
	compile 'org.seleniumhq.selenium:selenium-support:4.1.4'
	compile "com.sun.mail:smtp:2.0.1"
	compile "com.github.ua-parser:uap-java:1.5.2"
	compile "javax.validation:validation-api:2.0.1.Final"
	compile "javax.servlet.jsp:javax.servlet.jsp-api:2.3.3"
	compile "javax.servlet:javax.servlet-api:4.0.1"
	
    testImplementation "junit:junit:4.13.2"
}

ext.coreExcludes = []

task modelJar(type: Jar){
	archiveClassifier = "model"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "**/model/**"
        project.ext.coreExcludes.addAll(includes)
    }  
}

task controllerJar(type: Jar){
	archiveClassifier = "controller"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "**/controller/**"
        project.ext.coreExcludes.addAll(includes)
    }  
}

task persistenceJar(type: Jar){
	archiveClassifier = "persistence"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "**/persistence/**"
        project.ext.coreExcludes.addAll(includes)
    }  
}

task serviceJar(type: Jar){
	archiveClassifier = "service"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "**/service/**"
        project.ext.coreExcludes.addAll(includes)
    }  
}

task uiJar(type: Jar){
	archiveClassifier = "ui"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "**/ui/**"
        project.ext.coreExcludes.addAll(includes)
    }  
}

task resourcesJar(type: Jar){
	archiveClassifier = "resources"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        include "etc/**/*.properties"
        include "etc/**/*.xml"
		include "etc/**/*.xsd"
		project.ext.coreExcludes.addAll(includes)
    }  
}

task coreJar(type: Jar){
	archiveClassifier = "core"
	duplicatesStrategy = "exclude"
    exclude "META-INF/**"
	exclude "**/*.html"
    from(sourceSets.main.output){
        exclude project.ext.coreExcludes
    }  
}

jar{
    exclude "META-INF/**"
	exclude "**/*.html"
    duplicatesStrategy = "exclude"
}

task javadocJar(type: Jar){
	archiveClassifier = "javadoc"
    from javadoc
}

artifacts{
	archives modelJar
	archives controllerJar
	archives persistenceJar
	archives serviceJar
	archives uiJar
	archives resourcesJar
	archives coreJar
}

publishing{
    publications{
       	mavenJava(MavenPublication){
            from components.java
			artifact modelJar
			artifact controllerJar
			artifact persistenceJar
			artifact serviceJar
			artifact uiJar
			artifact resourcesJar
			artifact coreJar
 			artifact javadocJar
        }
    }
}

uploadArchives{
    repositories{
        mavenDeployer{
            repository(url: System.getenv("REPOSITORY_URL")){
                authentication(userName: System.getenv("REPOSITORY_USER"),
						       password: System.getenv("REPOSITORY_PASSWORD"))
            }
        }
    }
}